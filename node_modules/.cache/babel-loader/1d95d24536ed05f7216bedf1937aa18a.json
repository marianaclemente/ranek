{"remainingRequest":"/Users/marianaclemente/Repositórios/ranek/node_modules/babel-loader/lib/index.js!/Users/marianaclemente/Repositórios/ranek/node_modules/eslint-loader/index.js??ref--13-0!/Users/marianaclemente/Repositórios/ranek/src/store.js","dependencies":[{"path":"/Users/marianaclemente/Repositórios/ranek/src/store.js","mtime":1552759432000},{"path":"/Users/marianaclemente/Repositórios/ranek/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marianaclemente/Repositórios/ranek/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marianaclemente/Repositórios/ranek/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"/Users/marianaclemente/Reposito\\u0301rios/ranek/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport { api } from \"@/services.js\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  strict: true,\n  state: {\n    login: false,\n    usuario: {\n      id: \"\",\n      nome: \"\",\n      email: \"\",\n      senha: \"\",\n      cep: \"\",\n      rua: \"\",\n      numero: \"\",\n      bairro: \"\",\n      cidade: \"\",\n      estado: \"\"\n    },\n    usuario_produtos: null\n  },\n  mutations: {\n    UPDATE_LOGIN: function UPDATE_LOGIN(state, payload) {\n      state.login = payload;\n    },\n    UPDATE_USUARIO: function UPDATE_USUARIO(state, payload) {\n      state.usuario = _Object$assign(state.usuario, payload);\n    },\n    UPDATE_USUARIO_PRODUTOS: function UPDATE_USUARIO_PRODUTOS(state, payload) {\n      state.usuario_produtos = payload;\n    },\n    ADD_USUARIO_PRODUTOS: function ADD_USUARIO_PRODUTOS(state, payload) {\n      state.usuario_produtos.unshit(payload);\n    }\n  },\n  actions: {\n    getUsuarioProdutos: function getUsuarioProdutos(context) {\n      api.get(\"/produto?usuario_id=\".concat(context.state.usuario.id)).then(function (response) {\n        context.commit(\"UPDATE_USUARIO_PRODUTOS\", response.data);\n      });\n    },\n    getUsuario: function getUsuario(context, payload) {\n      return api.get(\"/usuario/\".concat(payload)).then(function (response) {\n        context.commit(\"UPDATE_USUARIO\", response.data);\n        context.commit(\"UPDATE_LOGIN\", true);\n      });\n    },\n    criarUsuario: function criarUsuario(context, payload) {\n      context.commit(\"UPDATE_USUARIO\", {\n        id: payload.email\n      });\n      return api.post(\"/usuario\", payload);\n    },\n    deslogarUsuario: function deslogarUsuario(context) {\n      context.commit(\"UPDATE_USUARIO\", {\n        id: \"\",\n        nome: \"\",\n        email: \"\",\n        senha: \"\",\n        cep: \"\",\n        rua: \"\",\n        numero: \"\",\n        bairro: \"\",\n        cidade: \"\",\n        estado: \"\"\n      });\n      context.commit(\"UPDATE_LOGIN\", false);\n    }\n  }\n});",{"version":3,"sources":["/Users/marianaclemente/Repositórios/ranek/src/store.js"],"names":["Vue","Vuex","api","use","Store","strict","state","login","usuario","id","nome","email","senha","cep","rua","numero","bairro","cidade","estado","usuario_produtos","mutations","UPDATE_LOGIN","payload","UPDATE_USUARIO","UPDATE_USUARIO_PRODUTOS","ADD_USUARIO_PRODUTOS","unshit","actions","getUsuarioProdutos","context","get","then","response","commit","data","getUsuario","criarUsuario","post","deslogarUsuario"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport { api } from \"@/services.js\";\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  strict: true,\n  state: {\n    login: false,\n    usuario: {\n      id: \"\",\n      nome: \"\",\n      email: \"\",\n      senha: \"\",\n      cep: \"\",\n      rua: \"\",\n      numero: \"\",\n      bairro: \"\",\n      cidade: \"\",\n      estado: \"\"\n    },\n    usuario_produtos: null\n  },\n  mutations: {\n    UPDATE_LOGIN(state, payload) {\n      state.login = payload;\n    },\n    UPDATE_USUARIO(state, payload) {\n      state.usuario = Object.assign(state.usuario, payload);\n    },\n    UPDATE_USUARIO_PRODUTOS(state, payload) {\n      state.usuario_produtos = payload;\n    },\n    ADD_USUARIO_PRODUTOS(state, payload) {\n      state.usuario_produtos.unshit(payload);\n    }\n  },\n  actions: {\n    getUsuarioProdutos(context) {\n      api\n        .get(`/produto?usuario_id=${context.state.usuario.id}`)\n        .then(response => {\n          context.commit(\"UPDATE_USUARIO_PRODUTOS\", response.data);\n        });\n    },\n    getUsuario(context, payload) {\n      return api.get(`/usuario/${payload}`).then(response => {\n        context.commit(\"UPDATE_USUARIO\", response.data);\n        context.commit(\"UPDATE_LOGIN\", true);\n      });\n    },\n    criarUsuario(context, payload) {\n      context.commit(\"UPDATE_USUARIO\", { id: payload.email });\n      return api.post(\"/usuario\", payload);\n    },\n    deslogarUsuario(context) {\n      context.commit(\"UPDATE_USUARIO\", {\n        id: \"\",\n        nome: \"\",\n        email: \"\",\n        senha: \"\",\n        cep: \"\",\n        rua: \"\",\n        numero: \"\",\n        bairro: \"\",\n        cidade: \"\",\n        estado: \"\"\n      });\n      context.commit(\"UPDATE_LOGIN\", false);\n    }\n  }\n});\n"]}]}
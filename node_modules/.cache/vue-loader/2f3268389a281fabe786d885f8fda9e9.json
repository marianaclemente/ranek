{"remainingRequest":"/Users/marianaclemente/Repositórios/ranek/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marianaclemente/Repositórios/ranek/src/components/FinalizarCompra.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marianaclemente/Repositórios/ranek/src/components/FinalizarCompra.vue","mtime":1552765466000},{"path":"/Users/marianaclemente/Repositórios/ranek/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marianaclemente/Repositórios/ranek/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marianaclemente/Repositórios/ranek/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marianaclemente/Repositórios/ranek/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UsuarioForm from \"@/components/UsuarioForm.vue\";\nimport { api } from \"@/services.js\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"FinalizarCompra\",\n  components: {\n    UsuarioForm\n  },\n  props: [\"produto\"],\n  computed: {\n    ...mapState([\"usuario\"]),\n    compra() {\n      return {\n        comprador_id: this.usuario.email,\n        vendedor_id: this.produto.usuario_id,\n        produto: this.produto,\n        endereco: {\n          cep: this.usuario.cep,\n          rua: this.usuario.rua,\n          numero: this.usuario.numero,\n          bairro: this.usuario.bairro,\n          cidade: this.usuario.cidade,\n          estado: this.usuario.estado\n        }\n      };\n    }\n  },\n  methods: {\n    criarTransacao() {\n      return api.post(\"/transacao\", this.compra).then(() => {\n        this.$router.push({ name: \"compras\" });\n      });\n    },\n    async criarUsuario() {\n      try {\n        await this.$store.dispatch(\"criarUsuario\", this.$store.state.usuario);\n        await this.$store.dispatch(\n          \"getUsuario\",\n          this.$store.state.usuario.email\n        );\n        await this.criarTransacao();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    finalizarCompra() {\n      if (this.$store.state.login) {\n        this.criarTransacao();\n      } else {\n        this.criarUsuario();\n      }\n    }\n  }\n};\n",{"version":3,"sources":["FinalizarCompra.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FinalizarCompra.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section>\n    <h2>Endereço de Envio</h2>\n    <UsuarioForm>\n      <button class=\"btn\" @click.prevent=\"finalizarCompra\">Finalizar Compra</button>\n    </UsuarioForm>\n  </section>\n</template>\n\n<script>\nimport UsuarioForm from \"@/components/UsuarioForm.vue\";\nimport { api } from \"@/services.js\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"FinalizarCompra\",\n  components: {\n    UsuarioForm\n  },\n  props: [\"produto\"],\n  computed: {\n    ...mapState([\"usuario\"]),\n    compra() {\n      return {\n        comprador_id: this.usuario.email,\n        vendedor_id: this.produto.usuario_id,\n        produto: this.produto,\n        endereco: {\n          cep: this.usuario.cep,\n          rua: this.usuario.rua,\n          numero: this.usuario.numero,\n          bairro: this.usuario.bairro,\n          cidade: this.usuario.cidade,\n          estado: this.usuario.estado\n        }\n      };\n    }\n  },\n  methods: {\n    criarTransacao() {\n      return api.post(\"/transacao\", this.compra).then(() => {\n        this.$router.push({ name: \"compras\" });\n      });\n    },\n    async criarUsuario() {\n      try {\n        await this.$store.dispatch(\"criarUsuario\", this.$store.state.usuario);\n        await this.$store.dispatch(\n          \"getUsuario\",\n          this.$store.state.usuario.email\n        );\n        await this.criarTransacao();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    finalizarCompra() {\n      if (this.$store.state.login) {\n        this.criarTransacao();\n      } else {\n        this.criarUsuario();\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\nh2 {\n  margin-top: 40px;\n  margin-bottom: 20px;\n}\n\n.btn {\n  background: #e80;\n}\n</style>\n"]}]}